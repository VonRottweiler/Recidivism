import pandas as pd
import numpy as np
import sklearn
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

test = pd.read_csv('test.csv')

data = pd.read_csv('train.csv')

from sklearn.impute import SimpleImputer
mean = SimpleImputer(strategy='mean')
mode = SimpleImputer(strategy='most_frequent')

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

col = 0
for col in range(1, len(data.columns)):
  if (data[[data.columns[col]][0]].dtypes) == object:
    mode.fit(data[[data.columns[col]]])
    data[[data.columns[col]]] = mode.transform(data[[data.columns[col]]])
    data[data.columns[col]] = le.fit_transform(data[data.columns[col]])
  elif (data[[data.columns[col]][0]].dtypes) == float:
    mean.fit(data[[data.columns[col]]])
    data[[data.columns[col]]] = mean.transform(data[[data.columns[col]]])

col = 0
for col in range(1, len(test.columns)):
  if (test[[test.columns[col]][0]].dtypes) == object:
    mode.fit(test[[test.columns[col]]])
    test[[test.columns[col]]] = mode.transform(test[[test.columns[col]]])
    test[test.columns[col]] = le.fit_transform(test[test.columns[col]])
  elif (test[[test.columns[col]][0]].dtypes) == float:
    mean.fit(test[[test.columns[col]]])
    test[[test.columns[col]]] = mean.transform(test[[test.columns[col]]])
